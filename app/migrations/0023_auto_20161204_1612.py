# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-04 16:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0022_auto_20161202_2333'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='scenario',
            name='meta_devices',
        ),
        migrations.AddField(
            model_name='scenario',
            name='meta_broker',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.MetaBroker', verbose_name='Besteht aus einem Metabroker'),
        ),
        migrations.AddField(
            model_name='scenario',
            name='meta_endpoints',
            field=models.ManyToManyField(to='app.MetaEndpoint', verbose_name='Besteht aus MetaEndpointDevices'),
        ),
        migrations.AlterField(
            model_name='producttype',
            name='used_as_product_type_filter_by',
            field=models.ManyToManyField(blank=True, to='sessions.Session', verbose_name='Als Produkttypfilter verwendet von'),
        ),
        migrations.AlterField(
            model_name='providerprofile',
            name='profile_image',
            field=models.ImageField(blank=True, null=True, upload_to='provider', verbose_name='Bild f√ºr die Profilseite'),
        ),
        migrations.AlterField(
            model_name='scenario',
            name='in_shopping_basket_of',
            field=models.ManyToManyField(blank=True, to='sessions.Session', verbose_name='Dieses Szenario liegt im Warenkorb von Session'),
        ),
        migrations.AlterField(
            model_name='scenario',
            name='provider',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='app.Provider', verbose_name='Erstellt von'),
        ),
        migrations.AlterField(
            model_name='subcategory',
            name='used_as_filter_by',
            field=models.ManyToManyField(blank=True, to='sessions.Session', verbose_name='Benutzer die diese Subkategorie als Szenariofilter verwenden'),
        ),
    ]
